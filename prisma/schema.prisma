// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String  @unique
  password String
  name     String?
  type     String?

  isVerified Boolean @default(false)

  role Role @default(DEFAULT)

  images           Image[]
  booksIllustrated Book[]  @relation("IllustratorReferral")
  booksPublished   Book[]  @relation("PublishedReferral")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  DEFAULT
  COLLABORATOR
  MODERATOR
  ADMIN
}

model Image {
  id           Int    @id @default(autoincrement())
  fieldname    String
  originalname String
  encoding     String
  mimetype     String
  destination  String
  filename     String
  path         String
  size         Int

  url  String?
  type String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  bookCover   Book? @relation(fields: [bookCoverId], references: [id], name: "BookCoverReferral")
  bookCoverId Int?  @unique

  bookImage   Book? @relation(fields: [bookImageId], references: [id], name: "BookImageReferral")
  bookImageId Int?  @unique

  chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id              Int     @id @default(autoincrement())
  name            String
  description     String?
  type            String?
  publicationDate String?

  published Boolean? @default(false)

  genre   Genre? @relation(fields: [genreId], references: [id])
  genreId Int?

  cover Image? @relation("BookCoverReferral")

  secondaryImage Image? @relation("BookImageReferral")

  illustrator   User? @relation(fields: [illustratorId], references: [id], name: "IllustratorReferral")
  illustratorId Int?

  publisher   User? @relation(fields: [publisherId], references: [id], name: "PublishedReferral")
  publisherId Int?

  chapters Chapter[]
}

model Genre {
  id       Int     @id @default(autoincrement())
  name     String?
  ageRange String?

  books Book[]
}

model Chapter {
  id    Int     @id @default(autoincrement())
  name  String
  type  String?
  order Int?

  text Text[]

  images Image[]

  book   Book @relation(fields: [bookId], references: [id])
  bookId Int
}

model Text {
  id      Int     @id @default(autoincrement())
  content String
  name    String?
  type    String?

  chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId Int?
}
